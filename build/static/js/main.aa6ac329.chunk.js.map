{"version":3,"sources":["utils/auth.js","c1bcd8a8c945b53da6b29f10a2a553c0.gif","Stor/Reducer/listOfUsers.js","ProtectedRoute.js","Stor/Action/index.js","App.js","Stor/Reducer/IsLoggedIn.js","Stor/Reducer/rowsOfNames.js","Stor/Reducer/cart.js","Stor/Reducer/userInfo.js","Stor/Reducer/index.js","index.js"],"names":["isLoggedIn","localStorage","getItem","logout","clear","listOfUsers","state","action","type","payload","filter","item","id","ProtectedRoute","Component","component","rest","render","props","to","pathname","from","location","fetchProd","newProd","deletProd","prodId","getUser","users","deletAllCart","addProdToCart","prod","deletProdToCart","userInfo","info","SignIn","lazy","Dashboard","ProdoctInfo","Cart","Category","CartValidation","Pardakht","ResponseCach","Home","App","fallback","src","loading","style","path","exact","isLogged","rowsNames","cart","userInfoo","allReducers","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa6ac329.chunk.js","sourcesContent":["export const isLoggedIn = () => {\n  /*\n   * Check if user is logged in and has token\n   */\n  if (localStorage.getItem(\"token\")) {\n    return true;\n  }\n\n  return false;\n};\n\nexport const logout = () => {\n  /*\n   * Clear localStorage\n   */\n\n  localStorage.clear();\n  // window.location.reload();\n};\n","export default __webpack_public_path__ + \"static/media/c1bcd8a8c945b53da6b29f10a2a553c0.30e1be85.gif\";","const listOfUsers = (state = [] , action) => {\r\n    switch (action.type) {\r\n        case \"GET\":\r\n            return  action.payload;\r\n            case \"DELETHANDLE\":\r\n                return  state.filter((item) => item.id != action.payload)\r\n        default :\r\n            return state;\r\n    }\r\n}\r\nexport default listOfUsers;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isLoggedIn } from \"./utils/auth\";\nexport const ProtectedRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (isLoggedIn()) {\n          return <Component {...props} />;\n        } else {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/dashboard\",\n                state: {\n                  from: props.location,\n                },\n              }}\n            />\n          );\n        }\n      }}\n    />\n  );\n};\n","export const loginValidation = () =>{\n    return{\n        type:\"LOGGEDIN\",\n    }\n}\n\nexport const fetchProd = (newProd) => {\n    return {\n        type:\"FETCHGET\",\n        payload:newProd,\n    }\n}\n\nexport const deletProd = (prodId)=>{\n    return {\n        type:\"DELET\",\n        payload:prodId,\n    }\n}\n\nexport const getUser = (users)=>{\n    return {\n        type:\"GET\",\n        payload:users,\n    }\n}\nexport const deletUserHandle = (id) => {\n    return{\n        type:\"DELETHANDLE\",\n        payload:id,\n    }\n}\nexport const deletAllCart = () =>{\n    return{\n        type:\"DELETALL\",\n    }\n}\n\nexport const addProdToCart =(prod)=>{\n    return {\n        type:\"ADDCART\",\n        payload:prod,\n    }\n}\n\nexport const deletProdToCart =(id)=>{\n    return {\n        type:\"DELETCART\",\n        payload:id,\n    }\n}\n\nexport const userInfo = (info)=>{\n    return {\n        type:\"INFO\",\n        payload:info,\n    }\n}","import React,  { useState , useEffect , lazy , Suspense} from \"react\";\nimport {loginValidation} from \"./Stor/Action/index\";\nimport { ProtectedRoute } from \"./ProtectedRoute\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport loading from './c1bcd8a8c945b53da6b29f10a2a553c0.gif';\n// import SignIn from './components/SignIn';\nconst SignIn = lazy(() => import('./components/SignIn'))\n// import Dashboard from './components/Dashboard';\nconst Dashboard = lazy(() => import('./components/Dashboard'))\n// import Home from \"./components/Home\";\n// import ProdoctInfo from './components/ProdoctInfo';\nconst ProdoctInfo = lazy(() => import('./components/ProdoctInfo'))\n// import Cart from \"./components/Cart\";\nconst Cart = lazy(() => import(\"./components/Cart\"))\n// import Category from './components/Category';\nconst Category = lazy(() => import('./components/Category'))\n\n// import CartValidation from './components/CartValidation';\nconst CartValidation = lazy(() => import('./components/CartValidation'))\n\n// import Pardakht from './components/Pardakht';\nconst Pardakht = lazy(() => import('./components/Pardakht'))\n\n// import ResponseCach from './components/ResponseCach';\nconst ResponseCach = lazy(() => import(\"./components/ResponseCach\"))\n\nconst Home = lazy(() => import(\"./components/Home\"))\nfunction App() {\n  return (\n    <Suspense fallback={<img src={loading} style={{\"align\":\"center\"}}/>}>\n    <Router>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home>\n            </Home>\n          </Route>\n          <Route path=\"/categories/:category\">\n            <Category/>\n          </Route>\n          <ProtectedRoute path=\"/dashboard\" exact component={Dashboard} />\n          <Route path=\"/setting\">\n          <SignIn/>\n          </Route>\n          <Route path=\"/cart\" exact>\n            <Cart/>\n          </Route>\n          <Route path=\"/endCart\">\n            <CartValidation/>\n          </Route>\n          <Route path=\"/cash\">\n            <Pardakht/>\n          </Route>\n          <Route path=\"/responseCach/:res\">\n            <ResponseCach/>\n          </Route>\n          <Route path=\"/:prodId\">\n            <ProdoctInfo/>\n          </Route>\n\n        </Switch>\n      </Router>\n      </Suspense>\n  );\n}\n\nexport default App;","const isLogged = (state= true , action) => {\n    switch (action.type) {\n        case \"LOGGEDIN\":\n            return !state;\n        default:\n            return state;\n    }\n}\nexport default isLogged;","const rowsNames = (state= [] , action) => {\n    switch (action.type) {\n        case \"FETCHGET\":\n            return  action.payload;\n        case \"DELET\":\n            return state.filter((item) => item.id != action.payload)\n        // case \"ADD\":\n        //     return [action.payload , ...state]\n        // case \"EDIT\":\n        //     return \n        default :\n            return state;\n    }\n}\nexport default rowsNames;","const cart = (state= [] , action) => {\r\n    switch (action.type) {\r\n        case \"ADDCART\":\r\n            return  [action.payload, ...state];\r\n        case \"DELETCART\":\r\n            return state.filter((item) => item.id !== action.payload)\r\n        case \"DELETALL\":\r\n            return  [];\r\n        default :\r\n            return state;\r\n    }\r\n}\r\nexport default cart;","const userInfoo = (state = [] , action) => {\r\n    switch (action.type) {\r\n        case \"INFO\":\r\n            return  action.payload;\r\n        default :\r\n            return state;\r\n    }\r\n}\r\nexport default userInfoo;","import isLogged from \"./IsLoggedIn\";\nimport {combineReducers} from 'redux';\nimport rowsNames from './rowsOfNames';\nimport listOfUsers from './listOfUsers';\nimport cart from './cart';\nimport userInfoo from \"./userInfo\";\nconst allReducers = combineReducers({\n    isLogged:isLogged,\n    rowsNames:rowsNames,\n    listOfUsers:listOfUsers,\n    cart:cart,\n    userInfoo:userInfoo,\n});\nexport default allReducers;","import App from \"./App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { createStore  , combineReducers} from 'redux';\nimport { Provider } from 'react-redux';\nimport allReducers from \"./Stor/Reducer\";\n// import * as serviceWorker from \"serviceWorker\"/\nconst store = createStore(allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <Provider store={store}>\n      <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}